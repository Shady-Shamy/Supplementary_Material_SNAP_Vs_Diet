---
title: "Imputations"
format:
  html:
    code-fold: true
    code-summary: "Show the code"
---

> This page shows all steps taken for the imputation process. Imputations were conducted using the MICE R package using an M of 5 and 30 maximum iterations. All potential covariates were included in the imputation process as well as variables used to create the derived variables. Some of the variables that were used to create the dependent variables were removed due to too much collinearity with the derived variable and issues with reaching convergence. Some data management was performed to dichotomize variables, change reference values, and create variables used for testing different models. Models using imputed data were compared to models using complete case data.

::: panel-tabset
# Impute Values

```{r, include=FALSE}
knitr::opts_chunk$set(error = FALSE,warning = FALSE,message = FALSE,echo = TRUE)


library(mice)
library(forestplot)
library(dotwhisker)
library(tidyr)
library(gtsummary)
library(dplyr)


load("clean_data/bns_combined.Rdata")


```

```{r}


bns_combined <- bns_combined %>% mutate_at(c("eth_hispanic", "firstgen", "housing_insecure", "homelessness_year"), as.factor)

variables_of_interest <- bns_combined %>% select(SNAP3, race_eth, eth_hispanic, age, cooking_confident, living_with_family, food_insecure_2item, health_conscious, storage_access, storage_room, kitchen_access, ff_cat, ssb_cat, fruits3, household_size, monthly_hh_income, paid_work_hours, unpaid_work_hours, units, caregiving_hours, q64, q65, school, physical_activity, q83_1, q83_2, q83_3, SNAP_eligible, firstgen, academic_level, housing_insecure, homelessness_year, q7)


vector.methods <- c("polyreg", "polyreg", "logreg", "pmm", "logreg", "logreg", "logreg",
                    "logreg", "logreg", "logreg", "logreg", "polyreg", "polyreg", "polyreg",
                    "pmm", "polyreg", "pmm", "pmm", "pmm", "pmm",
                    "polyreg", "polyreg", "polyreg", "logreg", "pmm", "pmm", "pmm",
                    "logreg", "logreg", "polyreg", "logreg", "logreg", "logreg")


```

```{r}


# Due to the lengthy imputation process, the imputed data was saved and the code was commented out
 # imp_bns_combined_raw_mids <- mice(variables_of_interest, m=5, maxit=30, seed=500, printFlag=TRUE, method = vector.methods)

# saveRDS(imp_bns_combined_raw_mids, file ="clean_data/imp_bns_combined_raw_mids.RData")


imp_bns_combined_raw_mids <- readRDS("clean_data/imp_bns_combined_raw_mids.RData")


```



# Imputation data management

```{r}

#  Create a Complete Data Set
imp_bns_combined_long <- complete(imp_bns_combined_raw_mids, action= "long", include = TRUE)


# Change reference values

imp_bns_combined_long$health_conscious <- factor(imp_bns_combined_long$health_conscious, order = FALSE) %>% relevel(imp_bns_combined_long$health_conscious, ref = "No")

imp_bns_combined_long$kitchen_access <- factor(imp_bns_combined_long$kitchen_access, order = FALSE) %>% relevel(imp_bns_combined_long$kitchen_access, ref = "No")

imp_bns_combined_long$storage_room <- factor(imp_bns_combined_long$storage_room, order = FALSE) %>% relevel(imp_bns_combined_long$storage_room, ref = "No")


# Create variables to check ordinal regression


## FV ------------------------
imp_bns_combined_long$q77_one_vs_zero <- case_when(imp_bns_combined_long$fruits3 == "0" ~ "0", imp_bns_combined_long$fruits3 == "1-2" ~ "1-2")  %>% factor(order = FALSE)

imp_bns_combined_long$q77_one_vs_three_or_more <- case_when(imp_bns_combined_long$fruits3 == "3 or more" ~ "3 or more", imp_bns_combined_long$fruits3 == "1-2" ~ "1-2")  %>% factor(order = FALSE)

## SSB -------------------------------


imp_bns_combined_long$ssb_cat1 <- case_when(imp_bns_combined_long$ssb_cat == "Zero" ~ "Zero",
                                      imp_bns_combined_long$ssb_cat == "1-8 ounces" ~ "1-8 ounces") %>% factor(order = FALSE) %>% relevel(ref = "Zero")

imp_bns_combined_long$ssb_cat2 <- case_when(imp_bns_combined_long$ssb_cat == "1-8 ounces" ~ "1-8 ounces", imp_bns_combined_long$ssb_cat == "9-16 ounces" ~ "9-16 ounces") %>% factor(order = FALSE)

imp_bns_combined_long$ssb_cat3 <- case_when(imp_bns_combined_long$ssb_cat == "9-16 ounces" ~ "9-16 ounces",
                                  imp_bns_combined_long$ssb_cat == "17 or more ounces" ~ "17 or more ounces") %>% factor(order = FALSE) %>% relevel(ref = "9-16 ounces")


## FF ------------------------------------

imp_bns_combined_long$ff_cat1 <- case_when(imp_bns_combined_long$ff_cat == "Zero" ~ "Zero", imp_bns_combined_long$ff_cat == "1-2 times per week" ~ "1-2 times per week") %>% factor(order = FALSE) %>% relevel(ref = "Zero")

imp_bns_combined_long$ff_cat2 <- case_when(imp_bns_combined_long$ff_cat == "1-2 times per week" ~ "1-2 times per week", imp_bns_combined_long$ff_cat == "3-4 times per week" ~ "3-4 times per week") %>% factor(order = FALSE)

imp_bns_combined_long$ff_cat3 <- case_when(imp_bns_combined_long$ff_cat == "3-4 times per week" ~ "3-4 times per week",
                                  imp_bns_combined_long$ff_cat == "5 or more times per week" ~ "5 or more times per week") %>% factor(order = FALSE)



# Change numeric variables to increments

imp_bns_combined_long$paid_work_hours_tens <- (imp_bns_combined_long$paid_work_hours)/10
imp_bns_combined_long$unpaid_work_hours_tens <- (imp_bns_combined_long$unpaid_work_hours)/10
imp_bns_combined_long$caregiving_hours_tens <- (imp_bns_combined_long$caregiving_hours)/10
imp_bns_combined_long$units_four <- (imp_bns_combined_long$units)/4
imp_bns_combined_long$age_five <- (imp_bns_combined_long$age)/5

# Change Reference
imp_bns_combined_long$food_insecure_2item <- factor(imp_bns_combined_long$food_insecure_2item, order = FALSE) %>% relevel(imp_bns_combined_long$food_insecure_2item, ref = "No")



imp_bns_combined_long$total_work_hours <-   imp_bns_combined_long$paid_work_hours +
                                            imp_bns_combined_long$unpaid_work_hours



imp_bns_combined_long$ff_numeric <- recode(imp_bns_combined_long$ff_cat, 
                                             "Zero" = 0, "1-2 times per week" = 1,
                                             "3-4 times per week" = 3,
                                             "5 or more times per week" = 5)


imp_bns_combined_long$ssb_numeric <- recode(imp_bns_combined_long$ssb_cat,
                                              "Zero" = 0, "1-8 ounces" = 1,
                                              "9-16 ounces" = 9, "17 or more ounces" = 17)

imp_bns_combined_long$q77_numeric <- recode(imp_bns_combined_long$fruits3, "0" = 0,
                                              "1-2" = 1, "3 or more" = 3)



# Rename calfresh3 to SNAP3
imp_bns_combined_long <- rename(imp_bns_combined_long, SNAP3 = calfresh3)

# Rename levels of SNAP3
imp_bns_combined_long$SNAP3 <- recode(imp_bns_combined_long$SNAP3,
                                "CalFresh" = "SNAP",
                                "No CalFresh but Likely Eligible" = "Likely Eligible Non-Recipient",
                                "Likely Not Eligible" = "Income-Ineligible Non-Recipient")


# Rename q7 to gender
imp_bns_combined_long <- rename(imp_bns_combined_long, gender = q7)


# Rename calfresh_eligible to SNAP_eligible
imp_bns_combined_long <- rename(imp_bns_combined_long, SNAP_eligible = calfresh_eligible)


```

```{r, include=FALSE}

# Cohort

imp_bns_combined_long$Cohort <- case_when(grepl("Chico State|CSU, Northridge|Fresno State", imp_bns_combined_long$school) ~ "Pilot 2", TRUE ~ "Statewide")

# School
imp_bns_combined_long$school2 <- recode(imp_bns_combined_long$school,
                             "Allan Hancock Community College" = "CC",
                             "Butte CC" = "CC", "Mt. SAC CC" = "CC", "Clovis CC" = "CC",
                             "Palo Verde CC" = "CC", 
                             "Cal State San Bernardino" = "CSU",
                             "CSU Bakersfield" = "CSU",
                             "Fresno State" = "CSU",
                             "Sacramento State" = "CSU",
                             "Chico State" = "CSU",
                             "CSU Dominguez Hills" = "CSU",
                             "San Francisco State" = "CSU",
                             "Cal State LA" = "CSU",
                             "CSU, Northridge" = "CSU",
                             "UC Berkeley" = "UC")

# Change reference of food insecurity in original data set
bns_combined$food_insecure_2item <- factor(bns_combined$food_insecure_2item, order = FALSE) %>% relevel(bns_combined$food_insecure_2item, ref = "No")

```

```{r}
# Convert back to Mids
# imp_bns_combined_clean_mids <- as.mids(imp_bns_combined_long, .imp = ".imp")
# 
# saveRDS(imp_bns_combined_clean_mids, file = "clean_data/imp_bns_combined_clean_mids.RData")


imp_bns_combined_clean_mids <- readRDS("clean_data/imp_bns_combined_clean_mids.RData")



```


## Check Convergence

```{r}

# Check convergence of a few variables. Note: all imputed variables were checked but only a few are displayed 
plot(imp_bns_combined_raw_mids, c("calfresh3", "calfresh_eligible", "fruits3", "ff_cat", "ssb_cat"))


```


# Compare SSB Complete Case and Imputed Models

```{r}


original_ssb_model <- with(bns_combined, MASS::polr(ssb_cat~SNAP3 + Cohort + gender + race_eth + age + physical_activity + health_conscious + storage_access + units_four + paid_work_hours_tens + caregiving_hours_tens + homelessness_year, Hess=TRUE))



imp_ssb_model <- with(imp_bns_combined_clean_mids, MASS::polr(ssb_cat~SNAP3 + Cohort + gender + race_eth + age + physical_activity + health_conscious + storage_access + units_four + paid_work_hours_tens + caregiving_hours_tens + homelessness_year, Hess=TRUE))
# pool(imp_ssb_model) |> summary()

original_ssb_model_tidy <- tidy(original_ssb_model) %>%
  mutate(model = "original_ssb_model")

imp_ssb_model_tidy <- pool(imp_ssb_model) |> summary() %>%
  mutate(model = "imp_ssb_model") %>% select(-df)

ssb_models <- bind_rows(original_ssb_model_tidy , imp_ssb_model_tidy)

dwplot(ssb_models)  + geom_vline(xintercept = 0,
               colour = "black",
               linetype = 1)

# dwplot(imp_ssb_model_tidy) + geom_vline(xintercept = 1,
#                colour = "black",
#                linetype = 1)


```

# Compare Fast Food Complete Case and Imputed Models

```{r}


original_ff_model <- MASS::polr(ff_cat~SNAP3 + Cohort + gender + race_eth + age + monthly_hh_income + academic_level + physical_activity + storage_access + kitchen_access + health_conscious + living_with_family + cooking_confident + food_insecure_2item + homelessness_year, data = bns_combined, Hess=TRUE)


imp_ff_model <- with(imp_bns_combined_clean_mids, MASS::polr(ff_cat~SNAP3 + Cohort + gender + race_eth + age + monthly_hh_income + academic_level + physical_activity + storage_access + kitchen_access + health_conscious + living_with_family + cooking_confident + food_insecure_2item + homelessness_year, Hess=TRUE))
# pool(imp_ff_model) |> summary()


original_ff_model_tidy <- tidy(original_ff_model) %>%
  mutate(model = "original_ff_model")

imp_ff_model_tidy <- pool(imp_ff_model) |> summary() %>%
  mutate(model = "imp_ff_model") %>% select(-df)

ff_models <- bind_rows(original_ff_model_tidy , imp_ff_model_tidy)

dwplot(ff_models)  + geom_vline(xintercept = 0,
               colour = "black",
               linetype = 1)



```

# Compare F&V Complete Case and Imputed Models

```{r}



imp_FV_model <- with(imp_bns_combined_clean_mids, MASS::polr(fruits3~SNAP3 + Cohort + gender + race_eth + age + monthly_hh_income + health_conscious + cooking_confident + physical_activity + food_insecure_2item, Hess=TRUE))


original_FV_model <- MASS::polr(fruits3~SNAP3 + Cohort + gender + race_eth + age + monthly_hh_income + health_conscious + cooking_confident + physical_activity + food_insecure_2item, data = bns_combined, Hess=TRUE)

original_FV_model_tidy <- tidy(original_FV_model) %>%
  mutate(model = "original_FV_model")

imp_FV_model_tidy <- pool(imp_FV_model) |> summary() %>%
  mutate(model = "imp_FV_model") %>% select(-df)

FV_models <- bind_rows(original_FV_model_tidy , imp_FV_model_tidy)

dwplot(FV_models)  + geom_vline(xintercept = 0,
               colour = "black",
               linetype = 1)




```
:::
